To fix the retain cycle issue, use weak references where appropriate.  For delegate properties, declare them as `weak` to prevent the delegate from retaining the delegating object. If using blocks, capture `self` weakly using `__weak typeof(self) weakSelf = self;` inside the block and use `weakSelf` instead of `self` within the block's scope to avoid retain cycles.  This prevents the block from strongly retaining `self`, allowing for proper deallocation when no longer needed.